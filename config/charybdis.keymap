#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAVNUM 1
#define SYMBOL 2
#define MEDIA 3
#define MOUSE 4
#define SCROLL 5
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 19 20 21 22  // Left-hand keys.
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 16 15 14 13  // Right-hand keys.
#define THUMBS 36 37 38 39 40  // Thumb keys.
#define U_TAPPING_TERM 200

&sk {
    release-after-ms = <600>;
    quick-release;
};

&sl { ignore-modifiers; };

&mt { flavor = "tap-preferred"; };

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

&caps_word { /delete-property/ ignore-modifiers; };

/ {
    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <100>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hml_s: hml_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr_s: hmr_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;

            mods = <(MOD_LSFT)>;
        };

        td_bs: td_bs {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            hold-while-undecided;
            bindings = <&mo>, <&mkp>;
        };

        showscreen: showscreen {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LC(UP_ARROW)>, <&kp LG(UP_ARROW)>;
        };

        // Left-hand HRM

        ht_left: left_side_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        // Right-hand HRM

        ht_right: right_side_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        td_esc_scrl_slow: td_esc_scrl_slow {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&lt 5 ESC>, <&mo 6>;

            // hold, tap, double_tap
        };
    };

    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <19 20>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <20 21>;
        };

        MiddleClickRight {
            bindings = <&mkp MCLK>;
            key-positions = <21 22>;
        };

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 16>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 19>;
        };

        BrakLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 15>;
        };

        BrakRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 20>;
        };

        BraceLeft {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <2 14>;
        };

        BraceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <9 21>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <27 28 31 32>;
        };

        MiddleClick {
            bindings = <&mkp MCLK>;
            key-positions = <49 52>;
        };

        righ_enter {
            key-positions = <31 32>;
            bindings = <&kp ENTER>;
        };

        left_enter {
            bindings = <&mkp MB1>;
            key-positions = <27 28>;
        };

        lockscreen {
            bindings = <&kp LG(LC(Q))>;
            key-positions = <05 06>;
        };

        printscreen {
            bindings = <&kp LG(RS(N5))>;
            key-positions = <17 18>;
        };

        escsombo {
            bindings = <&kp ESC>;
            key-positions = <7 8>;
        };
    };

    macros {
        new_line: new_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(E) &kp ENTER>;
            label = "NEW_LINE";
        };
    };

    chosen { zmk,physical-layout = &charybdis_6col_layout; };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Eduardo";
            bindings = <
&kp CAPSLOCK   &kp Q            &kp W            &kp E             &kp R             &kp T          &kp Y       &kp U              &kp I              &kp O             &kp P                     &lt 6 ENTER
&kp BACKSPACE  &ht_left LCMD A  &ht_left LALT S  &ht_left LCTRL D  &ht_left LSHFT F  &kp G          &kp H       &ht_right RSHFT J  &ht_right RCTRL K  &ht_right LALT L  &ht_right RCMD SEMICOLON  &kp SQT
&kp LSHFT      &lt 1 Z          &kp X            &kp C             &kp V             &kp B          &kp N       &kp M              &kp COMMA          &kp PERIOD        &lt 2 SLASH               &kp RSHFT
                                                 &td_bs 3 MB1     &kp BACKSPACE     &showscreen    &kp DELETE  &kp SPACE
            >;
        };

        NAVNUM {
            display-name = "Numbers";
            bindings = <
&trans  &trans  &trans        &trans           &trans       &trans          &trans   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &trans
&trans  &none   &trans        &kp LC(LS(TAB))  &kp LC(TAB)  &trans          &trans   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans        &trans
&trans  &trans  &kp LEFT_GUI  &mkp MB4         &mkp MB1     &mkp MB5        &trans   &kp N7        &kp N8        &kp N9        &kp NUMBER_0  &trans
                              &trans           &kp TAB      &kp CAPSLOCK    &kp TAB  &trans
            >;
        };

        SYMBOL {
            display-name = "Symbols";
            bindings = <
&trans  &kp SQT               &kp PERCENT  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp HASH      &kp PIPE         &kp AMPERSAND  &kp ASTERISK  &kp GRAVE          &trans  &trans
&trans  &kp DQT               &kp AT_SIGN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE     &kp EXCLAMATION  &kp EQUAL      &kp PLUS      &kp MINUS          &trans  &trans
&trans  &kp NON_US_BACKSLASH  &kp LCTRL    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOLLAR    &kp RIGHT_GUI    &mkp MB1       &mkp MB2      &td_esc_scrl_slow  &trans  &trans
                                           &trans                &trans                 &trans        &trans           &kp TAB
            >;
        };

        MEDIA {
            display-name = "Move";
            bindings = <
&trans  &trans        &trans    &trans    &trans    &trans      &trans  &kp K_MUTE  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &trans     &trans
&trans  &kp F12       &kp F7    &kp F8    &kp F10   &trans      &trans  &kp LEFT    &kp UP_ARROW     &kp DOWN_ARROW     &kp RIGHT  &trans
&trans  &lt 5 ESCAPE  &mkp MB4  &mkp MB2  &mkp MB1  &mkp MB5    &trans  &new_line   &kp HOME         &kp END            &trans     &trans
                                &trans    &trans    &trans      &trans  &trans
            >;
        };

        MOUSE {
            display-name = "Mouse";
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &mkp LCLK  &mkp RCLK  &none     &trans  &trans
            >;
        };

        SCROLL {
            display-name = "Scroll";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        Adjustments {
            display-name = "Settings";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans
&trans        &trans        &trans        &trans        &trans  &trans          &trans        &trans        &trans        &trans        &trans  &trans
&trans        &trans        &trans        &trans        &trans  &trans          &trans        &trans        &trans        &trans        &trans  &trans
                                          &bt BT_CLR    &trans  &out OUT_TOG    &bt BT_CLR    &out OUT_TOG
            >;
        };
    };
};
